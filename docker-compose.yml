version: '3.8'

services:
  # Servicio de la aplicación
  app:
    build: .
    container_name: resto-app
    ports:
      - "4321:4321"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=go_human_resources_db
      - PORT=4321
    restart: always
    command: >
      sh -c "
        echo '#!/bin/sh
        set -e
        
        echo \"Esperando a que PostgreSQL esté disponible...\"
        export PGPASSWORD=$DB_PASSWORD
        
        until psql -h $DB_HOST -U $DB_USER -d $DB_NAME -c \"SELECT 1;\" > /dev/null 2>&1; do
          echo \"PostgreSQL no está disponible aún - esperando...\"
          sleep 1
        done
        
        echo \"PostgreSQL está listo!\"' > /app/wait-pg.sh && 
        chmod +x /app/wait-pg.sh && 
        /app/wait-pg.sh && 
        ./app"
    networks:
      - resto-network
    volumes:
      - ./templates:/app/templates
  # Servicio de base de datos
  db:
    image: postgres:15-alpine
    container_name: resto-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=go_human_resources_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - resto-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  resto-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local